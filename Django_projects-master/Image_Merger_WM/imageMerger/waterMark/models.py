# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2017-09-12 18:16
import uuid
from django.db import models
from django.utils.translation import ugettext_lazy as _
from django_extensions.db.models import TitleDescriptionModel, TimeStampedModel
from PIL import Image

def add_watermark(image, watermark):
    image1                  = image.convert('RGBA')
    image2                  = watermark.convert('RGBA')
    image_x, image_y        = image1.size
    watermark_x, watermark_y = image2.size
    watermark_scale         = max(image_x / (2.0 * watermark_x), image_y / (2.0 * watermark_y))
    new_size                = (int(watermark_x * watermark_scale), int(watermark_y * watermark_scale))
    rgba_watermark          = image2.resize(new_size, resample=Image.ANTIALIAS)
    rgba_watermark_mask     = rgba_watermark.convert("L").point(lambda x: min(x, 25))
    rgba_watermark.putalpha(rgba_watermark_mask)
    watermark_x, watermark_y = rgba_watermark.size
    image1.paste(rgba_watermark, None, rgba_watermark_mask)
    return image1

def image_upload_to(instance, filename):
    return 'original_image/{uuid}/{filename}'.format(uuid=uuid.uuid4().hex, filename=filename)

class waterMark(TitleDescriptionModel, TimeStampedModel):
    image = models.ImageField(_('original image'), upload_to=image_upload_to)

